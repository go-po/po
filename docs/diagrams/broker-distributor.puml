@startuml

hide footbox

boundary Broker         AS broker
control Distributor     AS dist
control Registry        AS registry
database Store          AS store
collections Handlers    AS handlers


[-> broker : record.Record
activate broker
    broker  -> dist ++ : Distribute(record.Record)
        dist    -> registry ++ : ToMessage(record.Record)
        return record.Message

        loop each handler
            dist -> store ++ : GetLastPosition
            return position

            alt message is ahead of subscriber
                dist -> store ++ : ReadRecords
                return records
                dist -> handlers ++ : Handle(records)
                return
            else message is next in sequence
                dist -> handlers ++ : Handle(record)
                return
            else message is already seen
                dist -> dist : Ignore
            end

            dist -> store ++ : SetPosition
            return
    end
    return

deactivate broker





@enduml

// Code generated by sqlc. DO NOT EDIT.
// source: index.sql

package db

import (
	"context"
)

const getNextIndex = `-- name: GetNextIndex :one
SELECT next
FROM po_msg_index
WHERE stream = $1 FOR UPDATE
`

func (q *Queries) GetNextIndex(ctx context.Context, stream string) (int64, error) {
	row := q.db.QueryRowContext(ctx, getNextIndex, stream)
	var next int64
	err := row.Scan(&next)
	return next, err
}

const setNextIndex = `-- name: SetNextIndex :exec
INSERT INTO po_msg_index (stream, next)
VALUES ($1, $2)
ON CONFLICT (stream) DO UPDATE
    SET next = $2
WHERE po_msg_index.next = $2 - 1
  AND po_msg_index.stream = $1
`

type SetNextIndexParams struct {
	Stream string `json:"stream"`
	Next   int64  `json:"next"`
}

func (q *Queries) SetNextIndex(ctx context.Context, arg SetNextIndexParams) error {
	_, err := q.db.ExecContext(ctx, setNextIndex, arg.Stream, arg.Next)
	return err
}
